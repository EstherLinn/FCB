(() => { const e = "website", t = (() => { let e = encodeURI(window.location.pathname).split("/").pop(); return e.toLocaleLowerCase().replace(" ", "-") })(), o = "wms.firstbank.com.tw", n = ["facebook.com"]; async function d(d) { let a = d.querySelectorAll('a[href^="/"],a[href^="https://"],a[href^="http://"]'); await async function (d) { d && d.length && d.forEach((d => { try { let a = new URL(window.encodeURI(d.href)); if (n.find((e => new RegExp(e, "gi").test(a.hostname)))) return; const c = a.searchParams, r = "utm_source", s = "utm_medium", i = "utm_campaign"; c.delete(r), c.append(r, o), c.delete(s), c.append(s, e), c.delete(i), c.append(i, t); let l = encodeURI(a.toString()); d.href = l } catch (e) { console.error(e) } })) }(a) } new MutationObserver(((e, t) => { for (const t of e) "childList" === t.type && t.addedNodes && t.addedNodes.length && t.addedNodes.forEach((e => { 1 === e.nodeType && d(e) })) })).observe(document.body, { subtree: !0, childList: !0 }), document.addEventListener("DOMContentLoaded", (function () { d(document) })) })();