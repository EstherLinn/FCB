@using Sitecore.Configuration;
@using Foundation.Wealth.Extensions;
@using Sitecore.Web;
@using Foundation.Wealth.Helper;
@using Feature.Wealth.Account.Helpers;
@{
    var SubcriptionSingleLink = Settings.GetSetting("WebSubscriptionSingle");
    var SubcriptionRegularLink = Settings.GetSetting("WebSubscriptionRegular");
    var MobileESingleLink = Settings.GetSetting("MobileESingle");
    var MobileERegularLink = Settings.GetSetting("MobileERegular");
    var MobileIleoSingleLink = Settings.GetSetting("MobileIleoSingle");
    var MobileIleoRegularLink = Settings.GetSetting("MobileIleoRegular");

}

<script>
    (function ($, window, document, undefined) {
        let isLogin = @(FcbMemberHelper.CheckMemberLogin() ? "true": "false");
            $.ajax({
                type: "post",
                url: "@ClientRoute.GenerateUrl(this, "Accounts", "SetUrlCookie")",
                data: { "url": '@System.Web.HttpContext.Current.Request.Url.AbsoluteUri' },
                success: function (msg) {
                    //設置成功
                },
            })
              window.CompareObj = function (id,type,name) {
                    this.id = id;
                    this.type = type;
                    this.name = name;
                }
           window.checkItemExists = function(key, value) {
               let existingEntries = store.get(key) || [];
               let idx = existingEntries.findIndex((x) => x.id == value);
                if (idx < 0) {
                    return false;
                } else {
                    return true;
                }
            }
            window.addItem = function(key, value) {
                let existingEntries = store.get(key) || [];
                let idx = existingEntries.findIndex((x) => x.id == value.id);
                if (idx < 0 ) {
                    existingEntries.push(value);
                    store.set(key, existingEntries)
                }
            }
            window.removeItem = function(key, value) {
                let existingEntries = store.get(key) || [];
                let idx = existingEntries.findIndex((x) => x.id == value.id);
                if (idx > -1) {
                    existingEntries.splice(idx, 1);
                    store.set(key, existingEntries)
                }
            }

        EventHandler.AddOnExec('compare-init', function (e) {
            let $this = e.target;
            let id = $this.getAttribute('eh-compare-id');
            let compare = store.get('compare') || [];
            if (checkItemExists('compare', id)) {
                $($this).addClass('is-active');
                $this.setAttribute('eh-compare-add', true);
            };

            if (compare.length == 7) {
                if ($this.getAttribute('eh-compare-add').toString() == "false")
                {
                    $this.setAttribute('href', '#popupCompareMax');
                    $this.setAttribute('data-popup', true);
                    $this.removeAttribute('data-ia');
                    $this.removeAttribute('data-msg');
                    $($this).off('click.interactive');
                    $($this).removeData('plugin_interactive');
                    $($this).magnificPopup();
                }
            }
        });
        EventHandler.AddClick('compare-click',  function(e){
            let $this = e.target;
            let id = $this.getAttribute('eh-compare-id');
            let name = $this.getAttribute('eh-compare-name');
            let type = $this.getAttribute('eh-compare-type').toLowerCase();
            let obj = new CompareObj(id, type, name);
            let compare = store.get('compare') || [];
            if ($this.getAttribute('eh-compare-add').toString() == "false") {
                if (compare.length < 7) {
                    addItem('compare', obj);
                    $this.setAttribute('eh-compare-add', true);
                    if (compare.length == 6) {
                        $('[eh-compare][eh-compare-add=false]').each(function (idx, ele) {
                                   ele.setAttribute('href', '#popupCompareMax');
                                    ele.setAttribute('data-popup', true);
                                    ele.removeAttribute('data-ia');
                                    ele.removeAttribute('data-msg');
                                    $(ele).off('click.interactive');
                                    $(ele).removeData('plugin_interactive');
                                    $(ele).magnificPopup();
                        })
                    }
                }
            } else {
                removeItem('compare', obj);
                $this.setAttribute('eh-compare-add', false);
                if(compare.length == 7){
                    $('[eh-compare][eh-compare-add=false]').each(function (idx, ele) {
                        ele.setAttribute('href', 'javascript:;');
                        ele.removeAttribute('data-popup');
                        ele.setAttribute('data-ia', 'true');
                        ele.setAttribute('data-msg', '加入比較|取消比較');
                        $(ele).interactive();
                        $(ele).off('click.magnificPopup');
                })
                }
            }
    });


        EventHandler.AddOnExec('focus-init', function (e) {
            let $this = e.target;
            if (!isLogin) {
                $this.setAttribute("href", "#popupLogin");
                $this.setAttribute('data-popup', true);
                $this.removeAttribute('data-ia');
                $this.removeAttribute('data-msg');
                $($this).off('click.interactive');
                $($this).removeData('plugin_interactive');
                $($this).magnificPopup();
            } else
            {
                let id = $this.getAttribute('eh-focus-id');
                if (checkItemExists('focus', id)) {
                    $($this).addClass('is-active');
                    $this.setAttribute('eh-focus-add', true);
                };
            }
        });
        EventHandler.AddClick('focus-click', function (e) {
            let $this = e.target;
            if (isLogin) {
                let id = $this.getAttribute('eh-focus-id');
                let name = $this.getAttribute('eh-focus-name');
                let type = $this.getAttribute('eh-focus-type').toLowerCase();
                let obj = new CompareObj(id, type, name);
                if ($this.getAttribute('eh-focus-add').toString() == "false") {
                    addItem('focus', obj);
                    $this.setAttribute('eh-focus-add', true);
                } else {
                    removeItem('focus', obj);
                    $this.setAttribute('eh-focus-add', false);
                }
            }
        });

          EventHandler.AddOnExec('subscription-init',function(e){
              let $this = e.target;
              let single = document.getElementById("subscriptionSingle");
              let regular = document.getElementById("subscriptionRegular");
              if (!isLogin) {
                  $this.setAttribute("href", "#popupLogin");
              }
              else {
                  $this.setAttribute("href", "#popupPurchase");
                        let singlelink = "";
                          let regularlink= "";
                  if ($(window).width() < 768) {
                      $('input[name="platform"]','#popupPurchase').on('click', function () {
                          let val = $(this).data('name');
                          if (val == "firste") {
                            singlelink = "@MobileESingleLink";
                             regularlink= "@MobileERegularLink";
                          } else {
                             singlelink = "@MobileIleoSingleLink";
                             regularlink= "@MobileIleoRegularLink";
                          }
                        let singleUrl = new URL(decodeURIComponent(singlelink.replaceAll("&amp;","&")));
                        let regularUrl = new URL(decodeURIComponent(regularlink.replaceAll("&amp;","&")));
                        let singleParms = singleUrl.searchParams;
                        let regularParms = regularUrl.searchParams;

                     if(singleParms.has("link"))
                    {
                        let singleInsindeUrl = new URL(singleParms.get("link"));
                        let regularInsindUrl = new URL(regularParms.get("link"));
                        singleInsindeUrl.searchParams.delete("FundCode");
                        singleInsindeUrl.searchParams.append("FundCode",single.getAttribute("eh-subscription-id"));
                        regularInsindUrl.searchParams.delete("FundCode");
                        regularInsindUrl.searchParams.append("FundCode",regular.getAttribute("eh-subscription-id"));
                        singleParms.delete("link",);
                        singleParms.append("link",singleInsindeUrl);
                        regularParms.delete("link");
                        regularParms.append("link",regularInsindUrl);

                    }
                    single.setAttribute("href",singleUrl);
                    regular.setAttribute("href",regularUrl);
                          store.set("MobilePlatform", val);
                      });

                      let val = store.get('MobilePlatform') || "";
                      if (val == "firste" || val == "") {
                          store.set("MobilePlatform", 'firste');
                          $('input[data-name="firste"]', '#popupPurchase').prop('checked', true);
                          singlelink = "@MobileESingleLink";
                          regularlink= "@MobileERegularLink";
                      } else {
                          $('input[data-name="ileo"]', '#popupPurchase').prop('checked', true);
                             singlelink = "@MobileIleoSingleLink";
                             regularlink= "@MobileIleoRegularLink";
                      }

                 single.setAttribute("href", decodeURIComponent(singlelink.replaceAll("&amp;","&")));
                  regular.setAttribute("href", decodeURIComponent(regularlink.replaceAll("&amp;","&")));
                  }
                  else {
                      singlelink = "@SubcriptionSingleLink";
                      regularlink= "@SubcriptionRegularLink";
                      single.setAttribute("href", decodeURIComponent(singlelink.replaceAll("&amp;","&")));
                      regular.setAttribute("href", decodeURIComponent(regularlink.replaceAll("&amp;","&")));
                  }
              }
          });

            EventHandler.AddClick('subscription-click', function (e) {
              if(isLogin){
                let $this = e.target;
                let id = $this.getAttribute('eh-subscription-id');
                let single = document.getElementById("subscriptionSingle");
                let regular =  document.getElementById("subscriptionRegular");
                single.setAttribute('eh-subscription-id',id);
                regular.setAttribute('eh-subscription-id',id);
                let singleUrl = new URL(decodeURIComponent(single.getAttribute("href")));
                let regularUrl = new URL(decodeURIComponent(regular.getAttribute("href")));
                let singleParms = singleUrl.searchParams;
                let regularParms = regularUrl.searchParams;
                if(singleParms.has("link"))
                {
                    let singleInsindeUrl = new URL(singleParms.get("link"));
                    let regularInsindUrl = new URL(regularParms.get("link"));
                    singleInsindeUrl.searchParams.delete("FundCode");
                    singleInsindeUrl.searchParams.append("FundCode",id);
                    regularInsindUrl.searchParams.delete("FundCode");
                    regularInsindUrl.searchParams.append("FundCode",id);
                    singleParms.delete("link",);
                    singleParms.append("link", singleInsindeUrl);
                    regularParms.delete("link");
                    regularParms.append("link",regularInsindUrl);
                }else{
                singleParms.delete("FundCode");
                singleParms.append("FundCode",id);
                regularParms.delete("FundCode");
                regularParms.append("FundCode",id);
                }
                 single.setAttribute("href",singleUrl);
                regular.setAttribute("href",regularUrl);
                 }
            });

            })(jQuery, window, document);
</script>
@Xcms.Sitecore.Foundation.Assets.Services.RenderAssetsService.Current.ScriptsRender("<script type=\"text/javascript\" src=\"{0}\" async ></script>", "/themes/project/wealth/js/utm.min.js")