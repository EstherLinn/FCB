@using Sitecore.Configuration;
@using Foundation.Wealth.Extensions;
@using Sitecore.Web;
@using Foundation.Wealth.Helper;
@using Feature.Wealth.Account.Helpers;
@{
    var SubcriptionSingleLink = Settings.GetSetting("WebSubscriptionSingle");
    var SubcriptionRegularLink = Settings.GetSetting("WebSubscriptionRegular");
    var MobileESingleLink = Settings.GetSetting("MobileESingle");
    var MobileERegularLink = Settings.GetSetting("MobileERegular");
    var MobileIleoSingleLink = Settings.GetSetting("MobileIleoSingle");
    var MobileIleoRegularLink = Settings.GetSetting("MobileIleoRegular");
    var AppPayLoginUrl = Settings.GetSetting("AppPay.CallLoginUrl");
}

<script>
    (function ($, window, document, undefined) {
        let isLogin = @(FcbMemberHelper.CheckMemberLogin() ? "true": "false");
        let TestSession = @(Session["AppPayResult"] == null ? "true": "false");
        window.IsLogin = isLogin;
        if (!TestSession) {
             $.ajax({
            type: "post",
            url: "@ClientRoute.GenerateUrl(this, "Accounts", "GetWebBankResult")",
                 success: function (msg) {
                     console.log('網銀登入結果');
                     console.log(msg);
            },
        })
        }
        $.ajax({
            type: "post",
            url: "@ClientRoute.GenerateUrl(this, "Accounts", "SetUrlCookie")",
            data: { "url": '@System.Web.HttpContext.Current.Request.Url.AbsoluteUri' },
            success: function (msg) {
                //設置成功
            },
        })
        if (isLogin) {
            $.ajax({
                type: "post",
                url: "@ClientRoute.GenerateUrl(this, "Accounts", "GetTrackListFromDb")",
                success: function (msg) {
                    console.log("TrackListFromDb :");
                    console.log(msg);

                },
            })
        }
        $.ajax({
            type: "post",
            url: "@ClientRoute.GenerateUrl(this, "Accounts", "GetTrackListFromFcb")",
            data: { "promotionCode": '123456' },
            success: function (msg) {
                console.log("TrackListFromFcb :");
                console.log(msg);
            },
            error: function (msg)
            {
                console.log("TrackListFromFcb :");
                console.log(msg);
            }
        })
        window.CompareObj = function (id, type, name) {
            this.id = id;
            this.type = type;
            this.name = name;
        }
        window.checkItemExists = function (key, value) {
            let existingEntries = store.get(key) || [];
            let idx = existingEntries.findIndex((x) => x.id == value);
            if (idx < 0) {
                return false;
            } else {
                return true;
            }
        }
        window.addItem = function (key, value) {
            let existingEntries = store.get(key) || [];
            let idx = existingEntries.findIndex((x) => x.id == value.id);
            if (idx < 0) {
                existingEntries.push(value);
                store.set(key, existingEntries)
            }
        }
        window.removeItem = function (key, value) {
            let existingEntries = store.get(key) || [];
            let idx = existingEntries.findIndex((x) => x.id == value.id);
            if (idx > -1) {
                existingEntries.splice(idx, 1);
                store.set(key, existingEntries)
            }
        }

        window.getNowDate = function ()
        {
            let now = new Date();
            let year = now.getFullYear();
            let month = now.getMonth() + 1;
            let day = now.getDate();
            if (month < 10) month = '0' + month
            if (day < 10) day = '0' + day
            return year + "/" + month + "/" + day ;
        }
        EventHandler.AddOnExec('compare-init', function (e) {
            let self = e.target;
            $(self).interactive();
            let id = self.getAttribute('eh-compare-id');
            let compare = store.get('compare') || [];
            if (checkItemExists('compare', id)) {
                $(self).addClass('is-active');
                self.setAttribute('eh-compare-add', true);
            }else{
                  $(self).removeClass('is-active');
                self.setAttribute('eh-compare-add', false);
            };
            if (compare.length == 7) {
                if (self.getAttribute('eh-compare-add').toString() == "false") {
                    self.setAttribute('href', '#popupCompareMax');
                    self.setAttribute('data-popup', true);
                    self.removeAttribute('data-ia');
                    self.removeAttribute('data-msg');
                    $(self).off('click.interactive');
                    $(self).removeData('plugin_interactive');
                    $(self).magnificPopup();
                }
            }
        });
        EventHandler.AddClick('compare-click', function (e) {
            let self = e.target;
            let id = self.getAttribute('eh-compare-id');
            let name = self.getAttribute('eh-compare-name');
            let type = self.getAttribute('eh-compare-type').toLowerCase();
            let obj = new CompareObj(id, type, name);
            let compare = store.get('compare') || [];
            if (self.getAttribute('eh-compare-add').toString() == "false") {
                if (compare.length < 7) {
                    addItem('compare', obj);
                    self.setAttribute('eh-compare-add', true);
                    if (compare.length == 6) {
                        $('[eh-compare][eh-compare-add=false]').each(function (idx, ele) {
                            ele.setAttribute('href', '#popupCompareMax');
                            ele.setAttribute('data-popup', true);
                            ele.removeAttribute('data-ia');
                            ele.removeAttribute('data-msg');
                            $(ele).off('click.interactive');
                            $(ele).removeData('plugin_interactive');
                            $(ele).magnificPopup();
                        })
                    }
                }
            } else {
                removeItem('compare', obj);
                self.setAttribute('eh-compare-add', false);
                if (compare.length == 7) {
                    $('[eh-compare][eh-compare-add=false]').each(function (idx, ele) {
                        ele.setAttribute('href', 'javascript:;');
                        ele.removeAttribute('data-popup');
                        ele.setAttribute('data-ia', 'true');
                        ele.setAttribute('data-msg', '加入比較|取消比較');
                        $(ele).interactive();
                        $(ele).off('click.magnificPopup');
                    })
                }
            }
            //reload 側邊比較工具
            window.SetCompareList();
        });


        EventHandler.AddOnExec('focus-init', function (e) {
            let self = e.target;
            if (!isLogin) {
                self.setAttribute("href", "#popupLogin");
                self.setAttribute('data-popup', true);
                self.removeAttribute('data-ia');
                self.removeAttribute('data-msg');
                $(self).off('click.interactive');
                $(self).removeData('plugin_interactive');
                $(self).magnificPopup();
            } else {
                $(self).interactive();
                let id = self.getAttribute('eh-focus-id');
                if (id) {
                    if (checkItemExists('focus', id)) {
                        $(self).addClass('is-active');
                        self.setAttribute('eh-focus-add', true);
                    };
                } else {
                    $(self).off('click.interactive');
                    $(self).removeData('plugin_interactive');
                }
            }
        });
        EventHandler.AddClick('focus-click', function (e) {
            let self = e.target;
            if (isLogin) {
                let id = self.getAttribute('eh-focus-id');
                let name = self.getAttribute('eh-focus-name');
                let type = self.getAttribute('eh-focus-type');
                if (id && name && type) {
                    let obj = new CompareObj(id, type, name);
                    obj.trackDate = getNowDate();
                    if (self.getAttribute('eh-focus-add').toString() == "false") {
                        addItem('focus', obj);
                        self.setAttribute('eh-focus-add', true);
                    } else {
                        removeItem('focus', obj);
                        self.setAttribute('eh-focus-add', false);
                    }
                   $.ajax({
                    type: "post",
                    url: "@ClientRoute.GenerateUrl(this, "Accounts", "InsertTrack")",
                    data: { "trackList": store.get("focus") || [] },
                    beforeSend: function () { $('.c-loading').loading('show'); },
                       success: function (msg) {
                           $('.c-loading').loading('hide');
                     },
                    error: function (msg) {
                         //設置error
                        if (self.getAttribute('eh-focus-add').toString() == "false") {
                            removeItem('focus', obj);
                            self.setAttribute('eh-focus-add', false);
                        } else {
                            addItem('focus', obj);
                            self.setAttribute('eh-focus-add', true);
                        }
                     },
                })
                }

            }
        });

        EventHandler.AddOnExec('subscription-init', function (e) {
            let self = e.target;
            let single = document.getElementById("subscriptionSingle");
            let regular = document.getElementById("subscriptionRegular");
            if (!isLogin) {
                self.setAttribute("href", "#popupLogin");
            }
            else {
                self.setAttribute("href", "#popupPurchase");
                let singlelink = "";
                let regularlink = "";
                if ($(window).width() < 768) {
                    $('input[name="platform"]', '#popupPurchase').on('click', function () {
                        let val = $(this).data('name');
                        if (val == "firste") {
                            singlelink = "@MobileESingleLink";
                            regularlink = "@MobileERegularLink";
                        } else {
                            singlelink = "@MobileIleoSingleLink";
                            regularlink = "@MobileIleoRegularLink";
                        }
                        let singleUrl = new URL(decodeURIComponent(singlelink.replaceAll("&amp;", "&")));
                        let regularUrl = new URL(decodeURIComponent(regularlink.replaceAll("&amp;", "&")));
                        let singleParms = singleUrl.searchParams;
                        let regularParms = regularUrl.searchParams;

                        if (singleParms.has("link")) {
                            let singleInsindeUrl = new URL(singleParms.get("link"));
                            let regularInsindUrl = new URL(regularParms.get("link"));
                            singleInsindeUrl.searchParams.delete("FundCode");
                            singleInsindeUrl.searchParams.append("FundCode", single.getAttribute("eh-subscription-id"));
                            regularInsindUrl.searchParams.delete("FundCode");
                            regularInsindUrl.searchParams.append("FundCode", regular.getAttribute("eh-subscription-id"));
                            singleParms.delete("link",);
                            singleParms.append("link", singleInsindeUrl);
                            regularParms.delete("link");
                            regularParms.append("link", regularInsindUrl);

                        }
                        single.setAttribute("href", singleUrl);
                        regular.setAttribute("href", regularUrl);
                        store.set("MobilePlatform", val);
                    });

                    let val = store.get('MobilePlatform') || "";
                    if (val == "firste" || val == "") {
                        store.set("MobilePlatform", 'firste');
                        $('input[data-name="firste"]', '#popupPurchase').prop('checked', true);
                        singlelink = "@MobileESingleLink";
                        regularlink = "@MobileERegularLink";
                    } else {
                        $('input[data-name="ileo"]', '#popupPurchase').prop('checked', true);
                        singlelink = "@MobileIleoSingleLink";
                        regularlink = "@MobileIleoRegularLink";
                    }

                    single.setAttribute("href", decodeURIComponent(singlelink.replaceAll("&amp;", "&")));
                    regular.setAttribute("href", decodeURIComponent(regularlink.replaceAll("&amp;", "&")));
                }
                else {
                    singlelink = "@SubcriptionSingleLink";
                    regularlink = "@SubcriptionRegularLink";
                    single.setAttribute("href", decodeURIComponent(singlelink.replaceAll("&amp;", "&")));
                    regular.setAttribute("href", decodeURIComponent(regularlink.replaceAll("&amp;", "&")));
                }
            }
        });

        EventHandler.AddClick('subscription-click', function (e) {
            if (isLogin) {
                let self = e.target;
                let id = self.getAttribute('eh-subscription-id');
                let single = document.getElementById("subscriptionSingle");
                let regular = document.getElementById("subscriptionRegular");
                single.setAttribute('eh-subscription-id', id);
                regular.setAttribute('eh-subscription-id', id);
                let singleUrl = new URL(decodeURIComponent(single.getAttribute("href")));
                let regularUrl = new URL(decodeURIComponent(regular.getAttribute("href")));
                let singleParms = singleUrl.searchParams;
                let regularParms = regularUrl.searchParams;
                if (singleParms.has("link")) {
                    let singleInsindeUrl = new URL(singleParms.get("link"));
                    let regularInsindUrl = new URL(regularParms.get("link"));
                    singleInsindeUrl.searchParams.delete("FundCode");
                    singleInsindeUrl.searchParams.append("FundCode", id);
                    regularInsindUrl.searchParams.delete("FundCode");
                    regularInsindUrl.searchParams.append("FundCode", id);
                    singleParms.delete("link",);
                    singleParms.append("link", singleInsindeUrl);
                    regularParms.delete("link");
                    regularParms.append("link", regularInsindUrl);
                } else {
                    singleParms.delete("FundCode");
                    singleParms.append("FundCode", id);
                    regularParms.delete("FundCode");
                    regularParms.append("FundCode", id);
                }
                single.setAttribute("href", singleUrl);
                regular.setAttribute("href", regularUrl);
            }
        });

        EventHandler.AddOnce('visit-update', function (e) {
            let self = e;
            let params = {
                pageId: self.getAttribute('eh-visit-pageid'),
                url: new URL(location.href).href,
                querystring: self.getAttribute('eh-visit-qs').split('&')
            };

            $.ajax({
                url: '@ClientRoute.GenerateUrl(this, "VisitCount", "Update")',
                type: 'POST',
                data: params
            }).done(function (data, textStatus, jqXHR) {
            }).fail(function (jqXHR, textStatus, errorThrown) {
            });
        });

        EventHandler.AddOnExec('visit-exec', function (e) {
            let self = e.target;
            let params = {
                pageId: self.getAttribute('eh-visit-pageid'),
                url: new URL(location.href).href
            };

            $.ajax({
                url: '@ClientRoute.GenerateUrl(this, "VisitCount", "Get")',
                type: 'GET',
                data: params
            }).done(function (data, textStatus, jqXHR) {
                if (data) {
                    $(self).html(DOMPurify.sanitize(data.Count));
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
            });
        });

        EventHandler.AddClick('fcblogin-click', function (e) {
            $.ajax({
                type: "post",
                url: "@ClientRoute.GenerateUrl(this, "Accounts", "WebBankLogin")",
                beforeSend: function () { $('.c-loading').loading('show'); },
                success: function (resp) {
                    console.log(resp)
                    let postDataUrl = '@AppPayLoginUrl';
                    let postdata =
                    {
                        merchantId: resp.merchantId,
                        txReqId: resp.txReqId,
                        sign: resp.sign,
                    };
                    let form = document.createElement("form");
                    form.setAttribute("method", "post");
                    form.setAttribute("action", postDataUrl);
                    for (let key in postdata) {
                        let hiddenField = document.createElement("input");
                        hiddenField.setAttribute("type","hidden");
                        hiddenField.setAttribute("name", key);
                        hiddenField.setAttribute("value", postdata[key]);
                        form.appendChild(hiddenField);
                    }
                    document.body.appendChild(form);
                    form.submit();
                },
                error: function (err)
                {
                    console.log(err);
                },
                complete: function () { $('.c-loading').loading('hide');  }
            });
        });

        EventHandler.AddClick('focuscancel-click', function (e) {
            let self = e.target;
            let id = self.getAttribute('eh-focus-id');
            let type = self.getAttribute('eh-focus-type');
            let cancelBtn = document.querySelector('[data-set-cancel-focus]');
            cancelBtn.setAttribute('data-cancel-id', id);
            cancelBtn.setAttribute('data-cancel-type', type);
        });
        EventHandler.AddOnExec('focusdate-init', function (e) {
            let focusStore = store.get('focus') || [];
            let focusId = e.target.getAttribute('eh-focus-id');
            if (focusStore.length > 0 && focusId != '') {
                let idx = focusStore.findIndex((x) => x.id == focusId);
                if (idx >= 0) {
                    e.target.innerText = focusStore[idx].trackDate + "加入關注";
                }
            }
        });
        EventHandler.AddOnExec('info-init', function (e) {
            let self = e.target;
            let isHasInfo = $(self).closest("tr").find('[data-infostatus]').data('infostatus');
            if (isHasInfo == true) {
                $(self).addClass('is-active');
            }
        });
        EventHandler.AddClick('info-click', function (e) {
            let self = e.target;
            let type = self.getAttribute('eh-info-type');
            let id = self.getAttribute('eh-info-id');
            $('[data-set-alert]', '#popupAlert').data('type', type);
            if (type.toLowerCase() != "fund") {
                $("#popupAlert").find('[data-set-title]').text('收盤價');
            } else {
                $("#popupAlert").find('[data-set-title]').text('最新淨值');
            }
            $.ajax({
                type: "post",
                url: "@ClientRoute.GenerateUrl(this, "FocusList", "GetProductReachInfo")",
                data: { "type": type, "id": id},
                beforeSend: function () { $('.c-loading').loading('show'); },
                success: function (data) {
                        $("#popupAlert").find('[data-title]').data('id', $(self).closest("tr").find('[data-id]').data('id'));
                        $("#popupAlert").find('[data-netvalue]').data('netvalue', $(self).closest("tr").find('[data-netvalue]').data('netvalue'));
                        $("#popupAlert").find('[data-netvaluedate]').data('netvaluedate', $(this).closest("tr").find('[data-netvaluedate]').data('netvaluedate'));
                        $("#popupAlert").find('[data-title]').text($(self).closest("tr").find('[data-id]').text());
                        $("#popupAlert").find('[data-netvalue]').text($(self).closest("tr").find('[data-netvalue]').data('netvalue'));
                        $("#popupAlert").find('[data-netvaluedate]').text($(self).closest("tr").find('[data-netvaluedate]').data('netvaluedate'));
                    if (data && data.body.length > 0)
                    {
                        $.each(data.body, function (idx, item) {
                            let startDate = '';
                            let endDate = '';
                            switch (item.infoType) {
                                case "1":
                                    if (item.openInfo) {
                                        $('input[name="price"]').prop("checked")
                                    }

                                    $("#popupAlert").find('[data-alert-price]').val(item.reachValue).trigger('change.count');
                                    startDate = item.infoStartDate.split('T')[0].replaceAll('-','/');
                                    endDate= item.infoEndDate.split('T')[0].replaceAll('-','/');
                                    $('[data-infostart]').val(startDate);
                                    $('[data-infoend]').val(endDate);
                                    $('[data-infostart]').datepicker('setDate', startDate);
                                    $('[data-infoend]').datepicker('setDate', endDate);
                                    break;
                                case "2":
                                    if (item.openInfo) {
                                        $('input[name="quoteChange"]').prop("checked")
                                    }
                                    startDate = item.infoStartDate.split('T')[0].replaceAll('-','/');
                                    endDate= item.infoEndDate.split('T')[0].replaceAll('-','/');
                                    $("#popupAlert").find('[data-alert-rise]').val(item.risePercent);
                                    $("#popupAlert").find('[data-alert-fall]').val(item.fallPercent);
                                    $('[data-quotestart]').val(startDate);
                                    $('[data-quoteend]').val(endDate);
                                    $('[data-quotestart]').datepicker('setDate', startDate);
                                    $('[data-quoteend]').datepicker('setDate', endDate);
                                    break;
                            }
                        });
                    } else
                    {
                        let nowDate = getNowDate();

                        $('[data-infostart]').datepicker('setDate', nowDate);
                        $('[data-infoend]').datepicker('setDate', nowDate);
                        $('[data-infostart]').val('');
                        $('[data-infoend]').val('');
                        $('[data-quotestart]').datepicker('setDate', nowDate);
                        $('[data-quoteend]').datepicker('setDate', nowDate);
                        $('[data-quotestart]').val('');
                        $('[data-quoteend]').val('');
                        $("#popupAlert").find('[data-alert-price]').val($(self).closest("tr").find('[data-netvalue]').data('netvalue'));
                        $("#popupAlert").find('[data-alert-rise]').val('');
                        $("#popupAlert").find('[data-alert-fall]').val('');
                        $("#popupAlert").find('[data-count-input]').val(0);
                        $("#popupAlert").find('.c-count__text').text(0);

                    }
                    $('.c-loading').loading('hide');
                },
                error: function (msg) {
                    console.log(msg)
                },
            });

        });


    })(jQuery, window, document);
</script>
@Xcms.Sitecore.Foundation.Assets.Services.RenderAssetsService.Current.ScriptsRender("<script type=\"text/javascript\" src=\"{0}\" async ></script>", "/themes/project/wealth/js/utm.min.js")